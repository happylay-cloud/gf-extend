# 请求定义
# sub 想要访问资源的用户
# obj 要访问的资源
# act 用户对资源执行的操作，act可以是read、write、print等等你想要自定义的操作
[request_definition]
r = sub, obj, act

# 策略定义，也就是*.cvs文件，p定义的格式
[policy_definition]
p = sub, obj, act

# 组定义，也就是*.cvs文件，g定义的格式。g是用户组或角色
# g表示不同的RBAC体系，_, _表示用户、角色，_, _, _表示用户、角色、域
[role_definition]
g = _, _

# 定义多个策略的结果，allow/deny
# 任意一条策略满足，则最终结果为allow
[policy_effect]
e = some(where (p.eft == allow))

# 定义请求和策略匹配的方式
# p.eft是allow还是deny，基于此来决定
[matchers]
m = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act
